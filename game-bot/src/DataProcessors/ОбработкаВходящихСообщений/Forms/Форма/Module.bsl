
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	УстановитьДоступностьЭлементовФормы(ЭтотОбъект);
	РежимРаботыБота = Константы.РежимРаботыБота.Получить();
	Токен = Константы.ТокенТелеграмБота.Получить()
КонецПроцедуры

	
#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура РежимРаботыБотаПриИзменении(Элемент)
	ЗаписатьРежимРаботыБота(РежимРаботыБота);
КонецПроцедуры

&НаКлиенте
Процедура ТокенПриИзменени(Элемент)
	ЗаписатьТокен(Токен);
КонецПроцедуры
	
#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ЗапуститьБота(Команда)
	
	Если Не ПроверитьЗаполнение() Тогда
		Возврат;
	КонецЕсли;
	
	ИтерацияОбработкиВходящихВФоне();
	
	ПодключитьОбработчикОжидания("ИтерацияОбработкиВходящихВФоне", 1);	
	
	БотЗапущен = Истина;
	
	УстановитьДоступностьЭлементовФормы(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура ОстановитьБота(Команда)
	
	БотЗапущен = Ложь;
	
	ОтключитьОбработчикОжидания("ИтерацияОбработкиВходящихВФоне");
	
	УстановитьДоступностьЭлементовФормы(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура ВыполнитьОднократнуюОбрабоктуСообщений(Команда)
	
	Если Не ПроверитьЗаполнение() Тогда
		Возврат;
	КонецЕсли;

	ВыполнитьОднократнуюОбрабоктуСообщенийНаСервере();
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура ИтерацияОбработкиВходящихВФоне()
	
	Если ЗначениеЗаполнено(ИдентификаторЗадания) Тогда
		ПроверитьФоновоеЗадание();
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(ИдентификаторЗадания) И БотЗапущен Тогда
		ЗапуститьОбработкуВФоне();
		Возврат;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗапуститьОбработкуВФоне()
	РезультатЗапуска = ЗапуститьОбработкуВФонеНаСервере(УникальныйИдентификатор);
	ИдентификаторЗадания = РезультатЗапуска.ИдентификаторЗадания;
	АдресХранилища = РезультатЗапуска.АдресХранилища;
КонецПроцедуры

&НаКлиенте
Процедура ПроверитьФоновоеЗадание()
	
	РезультатПроверки = ПроверитьФоновоеЗаданиеНаСервере(ИдентификаторЗадания, АдресХранилища);
	
	Если РезультатПроверки.Состояние = "Активно" Тогда
		Возврат;
	КонецЕсли;
	
	ШаблонЛога = "%1: %2";
	//@skip-check use-non-recommended-method
	ВремяЗаписи = Формат(ТекущаяДата(), "ДЛФ=T;");	
	
	Если РезультатПроверки.Состояние = "Ошибка" Тогда
		СтрокаЛога = СтрШаблон(ШаблонЛога, ВремяЗаписи, РезультатПроверки.ТекстОшибки);
		Объект.ВходящиеДанные.ВставитьСтроку(0, СтрокаЛога);
		ИдентификаторЗадания = Неопределено;
	КонецЕсли;
	
	Если РезультатПроверки.Состояние = "Завершено" Тогда
		СтрокаЛога = СтрШаблон(ШаблонЛога, ВремяЗаписи, РезультатПроверки.РезультатВыполнения);
		Объект.ВходящиеДанные.ВставитьСтроку(0, СтрокаЛога);
		ИдентификаторЗадания = Неопределено;
	КонецЕсли;
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ЗапуститьОбработкуВФонеНаСервере(УникальныйИдентификатор)
	
	АдресХранилища = ПоместитьВоВременноеХранилище(Неопределено, УникальныйИдентификатор);
	
	ПараметрыФоновогоЗадания = Новый Массив;
	ПараметрыФоновогоЗадания.Добавить(АдресХранилища);
	
	ИмяМетода = "ИнтеграцияТелеграм.ОбработкаВходящихВФоне";
	
	Задание = ФоновыеЗадания.Выполнить(ИмяМетода, ПараметрыФоновогоЗадания);
	
	Результат = Новый Структура();
	Результат.Вставить("ИдентификаторЗадания", Задание.УникальныйИдентификатор);
	Результат.Вставить("АдресХранилища", АдресХранилища);
	
	Возврат Результат;	
	
КонецФункции

&НаСервереБезКонтекста
Функция ПроверитьФоновоеЗаданиеНаСервере(ИдентификаторЗадания, АдресХранилища)
	
	Результат = Новый Структура;
	Результат.Вставить("Состояние", "Активно");
	Результат.Вставить("ТекстОшибки", "");
	Результат.Вставить("РезультатВыполнения", "");

	Задание = ФоновыеЗадания.НайтиПоУникальномуИдентификатору(ИдентификаторЗадания);
	
	Если Задание = Неопределено Тогда
		Результат.Состояние = "Ошибка";
		Результат.ТекстОшибки = "Задание не обнаружено";
		Возврат Результат;
	КонецЕсли;		
	
	Если Задание.Состояние = СостояниеФоновогоЗадания.Активно Тогда
		Возврат Результат;
	КонецЕсли;
	
	Если Задание.Состояние = СостояниеФоновогоЗадания.Отменено Тогда
		Результат.Состояние = "Ошибка";
		Результат.ТекстОшибки = "Отменено администратором";
		Возврат Результат;
	КонецЕсли;
	
	Если Задание.Состояние = СостояниеФоновогоЗадания.ЗавершеноАварийно Тогда
		Результат.Состояние = "Ошибка";
		Результат.ТекстОшибки = ОбработкаОшибок.КраткоеПредставлениеОшибки(Задание.ИнформацияОбОшибке);
		Возврат Результат;
	КонецЕсли;
	
	Результат.Состояние = "Завершено";
	Результат.РезультатВыполнения = ПолучитьИзВременногоХранилища(АдресХранилища);	
	Возврат Результат;			
	
КонецФункции

&НаКлиентеНаСервереБезКонтекста
Процедура УстановитьДоступностьЭлементовФормы(Форма)
	
	Элементы = Форма.Элементы;
	
	Элементы.ФормаЗапуститьБота.Доступность = Не Форма.БотЗапущен;
	Элементы.ФормаОстановитьБота.Доступность = Форма.БотЗапущен;
	
	Элементы.РежимРаботыБота.Доступность = Не Форма.БотЗапущен;
	Элементы.Токен.Доступность = Не Форма.БотЗапущен;
	
КонецПроцедуры

&НаСервере
Процедура ВыполнитьОднократнуюОбрабоктуСообщенийНаСервере()
	
	АдресХранилища = ПоместитьВоВременноеХранилище(Неопределено, УникальныйИдентификатор);
	
	ИнтеграцияТелеграм.ОбработкаВходящихВФоне(АдресХранилища);
	
	РезультатВыполнения = ПолучитьИзВременногоХранилища(АдресХранилища);
	
	ШаблонЛога = "%1: %2";
	ВремяЗаписи = Формат(ТекущаяДатаСеанса(), "ДЛФ=T;");	
		
	СтрокаЛога = СтрШаблон(ШаблонЛога, ВремяЗаписи, РезультатВыполнения);
	Объект.ВходящиеДанные.ВставитьСтроку(0, СтрокаЛога);
	
КонецПроцедуры

&НаСервереБезКонтекста
Процедура ЗаписатьРежимРаботыБота(РежимРаботыБота)
	Константы.РежимРаботыБота.Установить(РежимРаботыБота);
КонецПроцедуры

&НаСервереБезКонтекста
Процедура ЗаписатьТокен(Токен)
	Константы.ТокенТелеграмБота.Установить(Токен);
КонецПроцедуры

#КонецОбласти

